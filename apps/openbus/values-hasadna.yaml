enabled: true
nfsServer: "~iac:hasadna_nfs1_internal_ip~"
sshTunnelSecretName: sshtunnel

# siriRequesterPauseForDebug: true
siriRequesterResources: '{"requests": {"cpu": "200m", "memory": "500Mi"}, "limits": {"memory": "1000Mi"}}'
siriRequesterNginxResources: '{"requests": {"cpu": "50m", "memory": "100Mi"}, "limits": {"memory": "200Mi"}}'
siriRequesterHealthResources: '{"requests": {"cpu": "50m", "memory": "100Mi"}, "limits": {"memory": "200Mi"}}'
siriRequesterNfsPath: "/openbus/siri-requester"
siriRequesterSecretName: siri-requester

# if we have many new snapshots to process, we need to increase the resources
# siriEtlProcessNewSnapshotsResources: '{"requests": {"cpu": "3000m", "memory": "4000Mi"}, "limits": {"memory": "8000Mi"}}'
# for normal operation, we can use much less resources
siriEtlProcessNewSnapshotsResources: '{"requests": {"cpu": "500m", "memory": "500Mi"}, "limits": {"memory": "1000Mi"}}'

db:
  enabled: false
  # image is used for the stride-db-migrations, it should use the same version as the dedicated db uses
  image: "postgres:14"
  # resources: '{"requests": {"cpu": "6000m", "memory": "30000Mi"}, "limits": {"cpu": "6000m", "memory": "30000Mi"}}'
  # nfsServer: "172.16.0.12"
  # nfsPath: "/stride/db"
  # nodePort: 31834
  # backupSchedule: "37 1 * * *"
  # backupImage: "docker.pkg.github.com/hasadna/open-bus-stride-db/open-bus-stride-db-backup:d358f4dfa16e60f9aad8946cad314fa4b5a195cb"
  # backupResources: '{"requests": {"cpu": "200m", "memory": "1500Mi"}, "limits": {"cpu": "400m", "memory": "3000Mi"}}'

airflowHomeNfsPath: "/openbus/airflow-home"
airflowDb:
  image: "postgres:13"
  resources: '{"requests": {"cpu": "100m", "memory": "500Mi"}, "limits": {"memory": "1000Mi"}}'
  nfsPath: "/openbus/airflow-db"
airflowWebserver:
  resources: '{"requests": {"cpu": "400m", "memory": "1000Mi"}, "limits": {"memory": "2000Mi"}}'
airflowScheduler:
  resources: '{"requests": {"cpu": "2000m", "memory": "12000Mi"}, "limits": {"memory": "16000Mi"}}'

  # persistentVolumeClaimName: airflow-scheduler

airflow:
  enableEmails: true
  AIRFLOW__SMTP__SMTP_MAIL_FROM: "Open Bus Airflow <open-bus-airflow@hasadna.org.il>"
  AIRFLOW__WEBSERVER__BASE_URL: "https://~iac:ingress-open-bus-airflow~"

redis:
  resources: '{"requests": {"cpu": "50m", "memory": "100Mi"}, "limits": {"memory": "200Mi"}}'
  image: redis:6@sha256:43fa7d538f0dbe2151ff38d4b69b7dbea6f80223cfd85d10f7a9f8cb6447872e

strideApiResources: {"requests": {"cpu": "1000m", "memory": "1000Mi"}, "limits": {"memory": "2000Mi"}}

backendResources: {"requests": {"cpu": "50m", "memory": "100Mi"}, "limits": {"memory": "200Mi"}}

gtfsNfsPath: "/openbus/gtfs"

#gtfsNginxPersistentVolumeClaimName: gtfs-nginx

gtfsNginxResources: {"requests": {"cpu": "50m", "memory": "50Mi"}, "limits": {"memory": "200Mi"}}

legacy:
  # legacy collectors don't generate any new data or data that isn't generated
  # from the stride data, so there is no reason to keep running them
  enabled: false
  siriCollectorResources: {"requests": {"cpu": "500m", "memory": "500Mi"}, "limits": {"memory": "2000Mi"}}
  gtfsCollectorResources: {"requests": {"cpu": "500m", "memory": "500Mi"}, "limits": {"memory": "2000Mi"}}
  nfsPath: "/openbus/legacy/openbus"

mapSearchResources: {"requests": {"cpu": "50m", "memory": "50Mi"}, "limits": {"memory": "200Mi"}}

secrets:
  - name: sshtunnel
    data:
      key: "~vault:Projects/OBus/k8s-secrets:sshtunnel-key~"
  - name: siri-requester
    data:
      OPEN_BUS_MOT_KEY: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_MOT_KEY~"
      OPEN_BUS_S3_ACCESS_KEY_ID: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_S3_ACCESS_KEY_ID~"
      OPEN_BUS_S3_BUCKET: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_S3_BUCKET~"
      OPEN_BUS_S3_SECRET_ACCESS_KEY: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_S3_SECRET_ACCESS_KEY~"
      # we connect to MOT directly from specific nodes whose IPs are allows in MOT, so we don't need the proxy
      # OPEN_BUS_SSH_TUNNEL_SERVER_IP: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_SSH_TUNNEL_SERVER_IP~"
  - name: db
    data:
      POSTGRES_PASSWORD: "~vault:Projects/OBus/k8s-secrets:DB_POSTGRES_PASSWORD~"
      SQLALCHEMY_URL: "~vault:Projects/OBus/k8s-secrets:DB_SQLALCHEMY_URL~"
  - name: airflow
    data:
      AIRFLOW__SMTP__SMTP_HOST: "~vault:Projects/OBus/k8s-secrets:AIRFLOW__SMTP__SMTP_HOST~"
      AIRFLOW__SMTP__SMTP_PASSWORD: "~vault:Projects/OBus/k8s-secrets:AIRFLOW__SMTP__SMTP_PASSWORD~"
      AIRFLOW__SMTP__SMTP_USER: "~vault:Projects/OBus/k8s-secrets:AIRFLOW__SMTP__SMTP_USER~"
      OPEN_BUS_PIPELINES_AIRFLOW_ADMIN_PASSWORD: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_PIPELINES_AIRFLOW_ADMIN_PASSWORD~"
      OPEN_BUS_PIPELINES_ALERT_EMAILS: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_PIPELINES_ALERT_EMAILS~"
      OPEN_BUS_STRIDE_PUBLIC_S3_WRITE_ACCESS_KEY_ID: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_STRIDE_PUBLIC_S3_WRITE_ACCESS_KEY_ID~"
      OPEN_BUS_STRIDE_PUBLIC_S3_WRITE_SECRET_ACCESS_KEY: "~vault:Projects/OBus/k8s-secrets:OPEN_BUS_STRIDE_PUBLIC_S3_WRITE_SECRET_ACCESS_KEY~"
      WASABI_ACCESS_KEY_ID: "~vault:Projects/OBus/storage_credentials:wasabi-stride-uploader-access-key~"
      WASABI_SECRET_ACCESS_KEY: "~vault:Projects/OBus/storage_credentials:wasabi-stride-uploader-secret-key~"
  - name: airflow-db
    data:
      POSTGRES_PASSWORD: "~vault:Projects/OBus/k8s-secrets:AIRFLOW_DB_POSTGRES_PASSWORD~"
      SQLALCHEMY_URL: "~vault:Projects/OBus/k8s-secrets:AIRFLOW_DB_SQLALCHEMY_URL~"
  - name: backend
    data:
      GITHUB_TOKEN: "~vault:Projects/OBus/backend-secrets:GITHUB_TOKEN~"
      S3_COMPLAINTS_AWS_KEY_ID: "~vault:Projects/OBus/backend-secrets:S3_COMPLAINTS_AWS_KEY_ID~"
      S3_COMPLAINTS_AWS_SECRET_ACCESS_KEY: "~vault:Projects/OBus/backend-secrets:S3_COMPLAINTS_AWS_SECRET_ACCESS_KEY~"

ingresses:
  - name: siri-requester
    ssl: true
    rules:
      - host: "~iac:ingress-open-bus-siri-requester~"
        serviceName: siri-requester-nginx
        servicePort: 80
  - name: airflow-webserver
    ssl: true
    rules:
      - host: "~iac:ingress-open-bus-airflow~"
        serviceName: airflow-webserver
        servicePort: 8080
  - name: stride-api
    ssl: true
    proxyTimeouts:
      read: 600
    rules:
      - host: "~iac:ingress-open-bus-stride-api~"
        serviceName: stride-api
        servicePort: 80
  - name: backend
    ssl: true
    rules:
      - host: "open-bus-backend.k8s.hasadna.org.il"
        serviceName: backend
        servicePort: 3001
  - name: gtfs
    ssl: true
    rules:
      - host: "~iac:ingress-open-bus-gtfs-data~"
        serviceName: gtfs-nginx
        servicePort: 80
  - name: webmon
    ssl: true
    rules:
      - host: "~iac:ingress-open-bus-webmon~"
        serviceName: webmon
        servicePort: 8901
  - name: map-search
    ssl: true
    rules:
      - host: "~iac:ingress-open-bus-map-search~"
        serviceName: map-search
        servicePort: 80
