{{ if and .Values.enabled .Values.ingresses }}
{{ range .Values.ingresses }}
apiVersion: {{ if gt (atoi $.Capabilities.KubeVersion.Minor) 30 }}networking.k8s.io/v1{{ else }}extensions/v1beta1{{ end }}
kind: Ingress
metadata:
  name: {{ .name }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
  {{ if .ssl }}
    cert-manager.io/cluster-issuer: letsencrypt
  {{ end }}
  {{ if .httpauth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .httpauth.secretName | quote }}
    nginx.ingress.kubernetes.io/auth-realm: {{ .httpauth.message | quote }}
  {{ end }}
  {{ if .permanentRedirect }}
    nginx.ingress.kubernetes.io/permanent-redirect: {{ .permanentRedirect | quote }}
  {{ end }}
  {{ if .proxyTimeouts }}
    {{ if .proxyTimeouts.connect }}nginx.ingress.kubernetes.io/proxy-connect-timeout: {{ .proxyTimeouts.connect | quote }}{{ end }}
    {{ if .proxyTimeouts.read }}nginx.ingress.kubernetes.io/proxy-read-timeout: {{ .proxyTimeouts.read | quote }}{{ end }}
    {{ if .proxyTimeouts.send }}nginx.ingress.kubernetes.io/proxy-send-timeout: {{ .proxyTimeouts.send | quote }}{{ end }}
  {{ end }}
spec:
  rules:
  {{ range .rules }}
  - host: {{ .host | quote }}
    http:
      paths:
      {{- if gt (atoi $.Capabilities.KubeVersion.Minor) 30 }}
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: {{ .serviceName }}
            port:
              number: {{ .servicePort }}
      {{- else }}
      - backend:
          serviceName: {{ .serviceName }}
          servicePort: {{ .servicePort }}
      {{- end }}
  {{ end }}
  {{ if .ssl }}
  tls:
  - hosts:
    {{ range .rules }}
    - {{ .host | quote }}
    {{ end }}
    secretName: {{ .name }}-cert
  {{ end }}
---
{{ end }}
{{ end }}
