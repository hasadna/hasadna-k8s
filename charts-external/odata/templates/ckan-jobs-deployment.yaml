{{ if and .Values.enabled .Values.ckanDeploymentEnabled }}
{{ if .Values.ckanJobsEnabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {name: ckan-jobs}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels: {app: ckan-jobs}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/ckan-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.ckanServiceAccountName | quote }}
      {{ if .Values.ckanJobsTerminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.ckanJobsTerminationGracePeriodSeconds }}
      {{ end }}
      initContainers:
      - name: secrets
        image: orihoch/dataportal-kubectl:18
        command:
        - bash
        - "-c"
        - |
          ./kubectl.sh get-ckan-secrets {{ .Values.ckanSecretName | default "ckan-secrets" | quote }} /etc/ckan-conf/secrets/secrets.sh
        volumeMounts:
        - name: ckan-conf-secrets
          mountPath: /etc/ckan-conf/secrets
      {{ if .Values.fixPermissions }}
      - name: permissions
        image: alpine
        command:
        - sh
        - "-c"
        - |
          chown -R 900:900 /var/lib/ckan &&\
          chown -R 900:900 /var/ckan &&\
          chmod -R ug+w /var/lib/ckan && chmod -R ug+w /var/ckan &&\
          chown -R 900:900 /etc/ckan-conf/secrets &&\
          ls -lah /var/lib/ckan &&\
          ls -lah /var/ckan &&\
          ls -lah /etc/ckan-conf/secrets
        securityContext:
          runAsUser: 0
        volumeMounts:
        - {mountPath: /var/lib/ckan, name: ckan-data, subPath: ckan}
        - {mountPath: /var/ckan/pipelines, name: ckan-data, subPath: pipelines}
        - name: ckan-conf-secrets
          mountPath: /etc/ckan-conf/secrets
      {{ end }}
      containers:
      - name: ckan-jobs
        image: {{ .Values.ckanImage | quote }}
        command: [/ckan-entrypoint.sh, ckan-paster, --plugin=ckan, jobs, -c, /etc/ckan/production.ini, worker]
        env:
        - name: CKAN_STORAGE_PATH
          value: /var/lib/ckan/data
        - name: CKAN_K8S_SECRETS
          value: /etc/ckan-conf/secrets/secrets.sh
        - name: CKAN_K8S_TEMPLATES
          value: /etc/ckan-conf/templates
        - name: GUNICORN_WORKERS
          value: {{ .Values.ckanGunicornWorkers | default "2" | quote }}
        resources: {{ .Values.ckanJobsResources }}
        volumeMounts:
        - {mountPath: /var/lib/ckan, name: ckan-data, subPath: ckan}
        - name: ckan-conf-secrets
          mountPath: /etc/ckan-conf/secrets
          readOnly: true
        - name: ckan-conf-templates
          mountPath: /etc/ckan-conf/templates
          readOnly: true
        - {mountPath: /var/ckan/pipelines, name: ckan-data, subPath: pipelines}
      {{ if .Values.ckanJobsPortForward }}
      - name: port-forward
        image: orihoch/dataportal-kubectl:2
        resources: {"requests": {"cpu": "10m", "memory": "50Mi"}, "limits": {"memory": "200Mi"}}
        command: [./kubectl.sh, port-forward, nginx, "5000:80"]
      {{ end }}
      volumes:
      - name: ckan-conf-secrets
        emptyDir: {}
      - name: ckan-conf-templates
        configMap:
          name: ckan
      - name: ckan-data
        {{ if .Values.hostPath }}
        hostPath:
          path: {{ .Values.hostPath | quote }}
          type: DirectoryOrCreate
        {{ else }}
        nfs:
          server: {{ .Values.ckanDataNfsServer | default "nfs" | quote }}
          path: "/"
        {{ end }}
{{ end }}
{{ end }}
