{{ if .Values.enabled }}
{{ if not .Values.disbaledDeployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anyway
spec:
  selector:
    matchLabels:
      app: anyway
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: anyway
    spec:
      terminationGracePeriodSeconds: 1
      containers:
      - name: anyway
        image: {{ .Values.image }}
        resources: {{ .Values.resources }}
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef: {"name": "anyway"}
        env:
        - name: POSTGRES_PASSWORD
          valueFrom: {"secretKeyRef":{"name":"db", "key":"POSTGRES_PASSWORD"}}
        - name: DATABASE_URL
          value: "postgresql://anyway:$(POSTGRES_PASSWORD)@db/anyway"
        - name: GUNICORN_CMD_ARGS
          value: "--bind=0.0.0.0"
        {{ if .Values.initialize }}
        - name: INITIALIZE
          value: "yes"
        {{ end }}
        command:
        - bash
        - "-c"
        - |
          echo "INITIALIZE: ${INITIALIZE}"
          if [ "${INITIALIZE}" == "yes" ]; then
            sleep 2 && ! alembic upgrade head && exit 1\
            python main.py process cbs && echo python main.py process cbs && exit 1\
            python main.py process united --light && echo python main.py process united --light && exit 1\
            [ "$?" != "0" ] && echo failed to initialize && exit 1
          else
            echo "else"
            # ! alembic upgrade head && echo failed alembic upgrade && exit 1
          fi
          echo gunicorn anyway:app 
          gunicorn anyway:app &
          GUNICORN_PID=$!
          echo celery worker -A anyway.clusters_calculator 
          celery worker -A anyway.clusters_calculator &
          CELERY_PID=$!
          while ( ps $GUNICORN_PID && ps $CELERY_PID ) >/dev/null 2>&1
          do
            sleep 2
          done
      - name: rabbitmq
        image: rabbitmq
        resources: {{ .Values.rabbitmqResources }}
        ports:
        - containerPort: 5672
{{ end }}
{{ end }}
